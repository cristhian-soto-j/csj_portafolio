version: '3.1'

services:
  app:
    build: .
    volumes:
      - .:/django
    expose:
      - ${APP_PORT}
    restart: "on-failure"
    env_file:
      - .env
    networks:
      app_net:
        ipv4_address: 192.168.0.4
    image: django
    container_name: django_container
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    gunicorn django.wsgi:application --bind 0.0.0.0:8000:${APP_PORT}" 
    environment:
      - DJANGO_ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db


  db:
    container_name: postgresql_db
    image: postgres
    restart: always 
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    # ports:
    #   - "5432:5432"
    networks:
      app_net:
        ipv4_address: 192.168.0.2  

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    volumes:
      - ./data/pgadmin-data:/var/lib/pgadmin4/data
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} #root@root.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} #root
    ports:
      - "5050:80"
    networks:
      app_net:
        ipv4_address: 192.168.0.3

  nginx:
    build: ./nginx
    ports:
      - 1339:80
    volumes:
      - ./data/nginx:/var/lib/nginx/data
    depends_on:
      - app



 
    
networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/24"
          gateway: 192.168.0.1