version: '3'

services:
  # database container's
  db:
    image: postgres:16
    restart: "always" 
    volumes:
      - db:${DB_VOLUME}
    expose:
      - ${DB_PORT}
    environment:
      - POSTGRES_HOST_AUTH_METHOD=${METHOD}
      - PGDATA=${PGDATA}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_HOST}
    networks:
      - database1_network

  # web container (django + gunicorn)
  djangoapp:
    build: .
    restart: "always"
    environment:
      - DJANGO_SETTINGS_MODULE
    volumes:
      - .:${ROOT_VOLUME}
      - static:${STATIC_VOLUME}
      - media:${MEDIA_VOLUME}
    networks:
      - database1_network
      - nginx_network
    depends_on:
     - db

  # reverse proxy container (nginx)
  nginx:
    image: nginx:1.13
    ports:
      - ${NGINX_PORTS}
    volumes:
      - ./nginx/conf.d:${NGINX_VOLUME}
      - static:${STATIC_VOLUME}
      - media:${MEDIA_VOLUME}
    networks:
      - nginx_network
    depends_on:
      - djangoapp


networks:
  database1_network:
    driver: bridge
  nginx_network:
    driver: bridge
  
volumes:
  db:
  static:
  media:
  